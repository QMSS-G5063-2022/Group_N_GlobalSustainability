"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title <- tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - Present) By Metric Tons"))
map = leaflet(final_df) %>%
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
map%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Mean CO₂ Emission (Mt)",
position = "bottomright")%>%
addControl(my_title, position = "topright" )
vars_to_keep = c("name","mean","geometry")
leaflet_df = final_df[vars_to_keep]
bins <- c(0,50,100,200,500,1000,2500,5000,10000)
pal <- colorBin("YlOrRd", domain = final_df$mean, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title <- tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - Present) By Metric Tons"))
map = leaflet(final_df) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Mean CO₂ Emission (Mt)",
position = "bottomright")%>%
addControl(my_title, position = "topright" )
vars_to_keep = c("name","mean","geometry")
leaflet_df = final_df[vars_to_keep]
bins <- c(0,50,100,200,500,1000,2500,5000,10000)
pal <- colorBin("YlOrRd", domain = final_df$mean, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title <- tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - Present) By Metric Tons"))
map = leaflet(final_df) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>%
map%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Mean CO₂ Emission (Mt)",
position = "bottomright")%>%
addControl(my_title, position = "topright" )
vars_to_keep = c("name","mean","geometry")
leaflet_df = final_df[vars_to_keep]
bins <- c(0,50,100,200,500,1000,2500,5000,10000)
pal <- colorBin("YlOrRd", domain = final_df$mean, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title <- tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - Present) By Metric Tons"))
map = leaflet(final_df) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
map%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Mean CO₂ Emission (Mt)",
position = "bottomright")%>%
addControl(my_title, position = "topright" )
vars_to_keep = c("name","mean","geometry")
leaflet_df = final_df[vars_to_keep]
bins <- c(0,50,100,200,500,1000,2500,5000,10000)
pal <- colorBin("YlOrRd", domain = final_df$mean, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title <- tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - Present) By Metric Tons"))
map = leaflet(final_df) %>%
addProviderTiles("Esri.WorldImagery")
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
vars_to_keep = c("name","mean","geometry")
leaflet_df = final_df[vars_to_keep]
bins <- c(0,50,100,200,500,1000,2500,5000,10000)
pal <- colorBin("YlOrRd", domain = final_df$mean, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title <- tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - Present) By Metric Tons"))
map = leaflet(final_df) %>%
addTiles() %>%
addProviderTiles("Esri.WorldImagery")%>%
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
map%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Mean CO₂ Emission (Mt)",
position = "bottomright")%>%
addControl(my_title, position = "topright" )
View(carbon)
#Changing name of country for to ensure consistancy
carbon$Country[carbon$Country=="Republic of Congo"]<-"Congo"
View(final_df)
#Changing name of country for to ensure consistency
carbon$Country[carbon$Country=="Republic of Congo"]="Congo"
carbon$Country[carbon$Country=="Democratic Republic of the Congo"]="Dem. Rep. Congo"
carbon$Country[carbon$Country=="Central African Republic"]="Central African Rep."
carbon$Country[carbon$Country=="South Sudan"]="S. Sudan"
carbon$Country[carbon$Country=="Czech Republic"]="Czech Rep."
carbon$Country[carbon$Country=="Bosnia and Herzegovina"]="Bosnia and Herz."
keep_vars = c("name", "geometry")
world_1 = world[keep_vars]
final_df = merge(world, complete_df_1, by.x = "name", by.y = "Country", all.x = TRUE)
vars_to_keep = c("name","mean","geometry")
leaflet_df = final_df[vars_to_keep]
bins <- c(0,50,100,200,500,1000,2500,5000,10000)
pal <- colorBin("YlOrRd", domain = final_df$mean, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title <- tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - Present) By Metric Tons"))
map = leaflet(final_df) %>%
addTiles() %>%
addProviderTiles("Esri.WorldImagery")%>%
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
map%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Mean CO₂ Emission (Mt)",
position = "bottomright")%>%
addControl(my_title, position = "topright" )
View(carbon)
#Changing name of country for to ensure consistency
df = read.csv("historical_emissions_world.csv")
carbon = df%>%
filter(Gas == "CO2")
vars_drop = c("Data.source", "Sector", "Gas", "Unit")
carbon_1 = carbon[,!(names(carbon) %in% vars_drop)]
var_names = colnames(carbon_1)
complete_df = aggregate(.~Country, data = carbon_1, FUN = sum,na.rm=TRUE)
complete_df[complete_df == 0] = NA
complete_df = complete_df %>% mutate(mean = rowMeans(.[, 2:170],na.rm=TRUE))
keep_vars = c("Country", "mean")
world= ne_countries(scale = "medium", returnclass = "sf")
class(world)
complete_df_1 = complete_df[keep_vars]
carbon$Country[carbon$Country=="Republic of Congo"]="Congo"
carbon$Country[carbon$Country=="Democratic Republic of the Congo"]="Dem. Rep. Congo"
carbon$Country[carbon$Country=="Central African Republic"]="Central African Rep."
carbon$Country[carbon$Country=="South Sudan"]="S. Sudan"
carbon$Country[carbon$Country=="Czech Republic"]="Czech Rep."
carbon$Country[carbon$Country=="Bosnia and Herzegovina"]="Bosnia and Herz."
keep_vars = c("name", "geometry")
world_1 = world[keep_vars]
final_df = merge(world, complete_df_1, by.x = "name", by.y = "Country", all.x = TRUE)
vars_to_keep = c("name","mean","geometry")
leaflet_df = final_df[vars_to_keep]
bins <- c(0,50,100,200,500,1000,2500,5000,10000)
pal <- colorBin("YlOrRd", domain = final_df$mean, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title <- tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - Present) By Metric Tons"))
map = leaflet(final_df) %>%
addTiles() %>%
addProviderTiles("Esri.WorldImagery")%>%
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
map%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Mean CO₂ Emission (Mt)",
position = "bottomright")%>%
addControl(my_title, position = "topright" )
View(final_df)
#Changing name of country for to ensure consistency
df = read.csv("historical_emissions_world.csv")
carbon = df%>%
filter(Gas == "CO2")
carbon$Country[carbon$Country=="Republic of Congo"]="Congo"
carbon$Country[carbon$Country=="Democratic Republic of the Congo"]="Dem. Rep. Congo"
carbon$Country[carbon$Country=="Central African Republic"]="Central African Rep."
carbon$Country[carbon$Country=="South Sudan"]="S. Sudan"
carbon$Country[carbon$Country=="Czech Republic"]="Czech Rep."
carbon$Country[carbon$Country=="Bosnia and Herzegovina"]="Bosnia and Herz."
vars_drop = c("Data.source", "Sector", "Gas", "Unit")
carbon_1 = carbon[,!(names(carbon) %in% vars_drop)]
var_names = colnames(carbon_1)
complete_df = aggregate(.~Country, data = carbon_1, FUN = sum,na.rm=TRUE)
complete_df[complete_df == 0] = NA
complete_df = complete_df %>% mutate(mean = rowMeans(.[, 2:170],na.rm=TRUE))
final_df = merge(world, complete_df_1, by.x = "name", by.y = "Country", all.x = TRUE)
vars_to_keep = c("name","mean","geometry")
leaflet_df = final_df[vars_to_keep]
bins <- c(0,50,100,200,500,1000,2500,5000,10000)
pal <- colorBin("YlOrRd", domain = final_df$mean, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title <- tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - Present) By Metric Tons"))
map = leaflet(final_df) %>%
addTiles() %>%
addProviderTiles("Esri.WorldImagery")%>%
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
map%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Mean CO₂ Emission (Mt)",
position = "bottomright")%>%
addControl(my_title, position = "topright" )
View(complete_df)
#Changing name of country for to ensure consistency
df = read.csv("historical_emissions_world.csv")
carbon = df%>%
filter(Gas == "CO2")
carbon$Country[carbon$Country=="Republic of Congo"]="Congo"
carbon$Country[carbon$Country=="Democratic Republic of the Congo"]="Dem. Rep. Congo"
carbon$Country[carbon$Country=="Central African Republic"]="Central African Rep."
carbon$Country[carbon$Country=="South Sudan"]="S. Sudan"
carbon$Country[carbon$Country=="Czech Republic"]="Czech Rep."
carbon$Country[carbon$Country=="Bosnia and Herzegovina"]="Bosnia and Herz."
vars_drop = c("Data.source", "Sector", "Gas", "Unit")
carbon_1 = carbon[,!(names(carbon) %in% vars_drop)]
var_names = colnames(carbon_1)
complete_df = aggregate(.~Country, data = carbon_1, FUN = sum,na.rm=TRUE)
complete_df[complete_df == 0] = NA
complete_df = complete_df %>% mutate(mean = rowMeans(.[, 2:170],na.rm=TRUE))
final_df = merge(world, complete_df, by.x = "name", by.y = "Country", all.x = TRUE)
View(final_df)
#Changing name of country for to ensure consistency
df = read.csv("historical_emissions_world.csv")
carbon = df%>%
filter(Gas == "CO2")
carbon$Country[carbon$Country=="Republic of Congo"]="Congo"
carbon$Country[carbon$Country=="Democratic Republic of the Congo"]="Dem. Rep. Congo"
carbon$Country[carbon$Country=="Central African Republic"]="Central African Rep."
carbon$Country[carbon$Country=="South Sudan"]="S. Sudan"
carbon$Country[carbon$Country=="Czech Republic"]="Czech Rep."
carbon$Country[carbon$Country=="Bosnia and Herzegovina"]="Bosnia and Herz."
vars_drop = c("Data.source", "Sector", "Gas", "Unit")
carbon_1 = carbon[,!(names(carbon) %in% vars_drop)]
var_names = colnames(carbon_1)
complete_df = aggregate(.~Country, data = carbon_1, FUN = sum,na.rm=TRUE)
complete_df[complete_df == 0] = NA
complete_df = complete_df %>% mutate(mean = rowMeans(.[, 2:170],na.rm=TRUE))
keep_vars = c("Country", "mean")
complete_df_1 = complete_df[keep_vars]
final_df = merge(world, complete_df_1, by.x = "name", by.y = "Country", all.x = TRUE)
vars_to_keep = c("name","mean","geometry")
leaflet_df = final_df[vars_to_keep]
bins <- c(0,50,100,200,500,1000,2500,5000,10000)
pal <- colorBin("YlOrRd", domain = final_df$mean, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title <- tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - Present) By Metric Tons"))
map = leaflet(final_df) %>%
addTiles() %>%
addProviderTiles("Esri.WorldImagery")%>%
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
map%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Mean CO₂ Emission (Mt)",
position = "bottomright")%>%
addControl(my_title, position = "topright" )
#mean map not with leaflet
ggplot(data = final_df) +
geom_sf(aes(fill = mean)) +
scale_fill_viridis_c()
#1950s
ggplot(data = also_final_df) +
geom_sf(aes(fill = X1950)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
ggplot(data = also_final_df) +
geom_sf(aes(fill = X1900)) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt")
View(final_df)
View(final_df)
View(final_df)
#Giving Greenland to have the same data as Denmark
final_df$mean[final_df$name=="Greenland"] = final_df$mean[final_df$name=="Denmark"]
#Giving Dominican Republic value of 0 because they had 0s which were replaced by NA for
#calculation as they are too small of a country
final_df$mean[final_df$name=="Dominican Rep."] =0
#Redoing the entire data wrangling as above and
#changing name of country for to ensure consistency
df = read.csv("historical_emissions_world.csv")
carbon = df%>%
filter(Gas == "CO2")
carbon$Country[carbon$Country=="Republic of Congo"]="Congo"
carbon$Country[carbon$Country=="Democratic Republic of the Congo"]="Dem. Rep. Congo"
carbon$Country[carbon$Country=="Central African Republic"]="Central African Rep."
carbon$Country[carbon$Country=="South Sudan"]="S. Sudan"
carbon$Country[carbon$Country=="Czech Republic"]="Czech Rep."
carbon$Country[carbon$Country=="Bosnia and Herzegovina"]="Bosnia and Herz."
carbon$Country[carbon$Country=="Taiwan, Republic of China"]="Taiwan"
carbon$Country[carbon$Country=="South Korea"]="Korea"
carbon$Country[carbon$Country=="North Korea"]="Dem. Rep. Korea"
carbon$Country[carbon$Country=="Laos"]="Lao PDR"
carbon$Country[carbon$Country=="Equatorial Guinea"]="Eq. Guinea"
vars_drop = c("Data.source", "Sector", "Gas", "Unit")
carbon_1 = carbon[,!(names(carbon) %in% vars_drop)]
var_names = colnames(carbon_1)
complete_df = aggregate(.~Country, data = carbon_1, FUN = sum,na.rm=TRUE)
complete_df[complete_df == 0] = NA
complete_df = complete_df %>% mutate(mean = rowMeans(.[, 2:170],na.rm=TRUE))
keep_vars = c("Country", "mean")
complete_df_1 = complete_df[keep_vars]
final_df = merge(world, complete_df_1, by.x = "name", by.y = "Country", all.x = TRUE)
#Giving Greenland to have the same data as Denmark
final_df$mean[final_df$name=="Greenland"] = final_df$mean[final_df$name=="Denmark"]
#Giving Dominican Republic value of 0 because they had 0s which were replaced by NA for
#calculation as they are too small of a country
final_df$mean[final_df$name=="Dominican Rep."] =0
vars_to_keep = c("name","mean","geometry")
leaflet_df = final_df[vars_to_keep]
bins = c(0,50,100,200,500,1000,2500,5000,10000)
pal= colorBin("YlOrRd", domain = final_df$mean, bins = bins)
labels = sprintf(
"<strong>%s</strong><br/>%g MtCO₂e (Metric Tons)",
leaflet_df$name, leaflet_df$mean
) %>% lapply(htmltools::HTML)
my_title = tags$p(tags$style("p {color: dark grey; font-size:12px}"),
tags$b("Mean CO₂ Emission By Country (1850 - 2018) By Metric Tons"))
map = leaflet(final_df) %>%
addTiles() %>%
addProviderTiles("Esri.WorldImagery")%>%
addPolygons(
fillColor = ~pal(mean),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
map%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Mean CO₂ Emission (Mt)",
position = "bottomright")%>%
addControl(my_title, position = "topright" )
